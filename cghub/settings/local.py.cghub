# cghub stage/production config file
import os, pwd, socket

# Disable debug stack dump by default.  Also causes memory leaks if enabled
DEBUG = False

ADMINS = (
  ('Mark Diekhans', 'markd@soe.ucsc.edu'),
)

isStaging = (socket.gethostname() == "app04")

##
# Configuration for WSAPI.
# A different cache is currently requesired due to difference format of metadata.
##
API_TYPE="SOLR"
#API_TYPE="WSAPI"

if API_TYPE == "SOLR":
    if isStaging:
        CGHUB_SERVER = 'http://stage.cghub.ucsc.edu:8080'
    else:
        CGHUB_SERVER = 'http://app01:8080'
else:
    if isStaging:
        CGHUB_SERVER = 'https://stage.cghub.ucsc.edu'
    else:
        CGHUB_SERVER = 'https://cghub.ucsc.edu'

FULL_METADATA_CACHE_DIR = '/scratch/var/cache/cghub-data-browser/full_metadata_cache'


# number of processes to use for  update_full_metadata_cache
MULTIPROCESSING_CORES = 12

# if user will try to add to cart more than specified number of files,
# confirmation popup will be shown
MANY_FILES = 2500


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'cghub_data_browser',
        'OPTIONS': {
             # pick up defaults file based on user name, since it must be owned by user
             'read_default_file': "/usr/local/cghub/cghub-data-browser/my." + pwd.getpwuid(os.geteuid()).pw_name + ".cnf",
             'init_command': 'SET storage_engine=INNODB',
             },
        }
}

TIME_ZONE = 'America/Los_Angeles'

from logging.handlers import SysLogHandler

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        'mail_admins': {
            'level': 'INFO',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        },
        'syslog':{ 
            'address': '/dev/log',
            'facility': SysLogHandler.LOG_LOCAL2, 
            'level':'INFO', 
            'class': 'logging.handlers.SysLogHandler', 
            'formatter': 'verbose',
        },
        'console':{  # writes Apache log, doens't truncate stacks
            #'level':'DEBUG',
            'level':'ERROR',
            'class':'logging.StreamHandler',
            'formatter': 'simple'
        },
    },
    'loggers': {
        '': {
            'handlers': ['syslog', 'console'],
            'level': 'WARNING',
            'propagate': True,
            },
        'django': {
            'handlers': ['syslog', 'console'],
            'level': 'WARNING',
            'propagate': True,
            },
        'django.request': {
            'handlers': ['syslog', 'console'],
            'level': 'WARNING',
            'propagate': True,
            },
        'wsapi.request': {
            # use to disable this logger
            # 'handlers': ['null'],
            'handlers': ['syslog'],
            'level': 'DEBUG',
            'propagate': True,
            },
        'celery': {
            'handlers': ['syslog'],
            'level': 'WARNING',
            'propagate': True,
            },
        },
}
